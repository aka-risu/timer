{"version":3,"sources":["webpack:///./timer.js"],"names":["timer","selector","targetDate","daysRef","document","querySelector","hoursRef","minsRef","secsRef","date","Date","now","deltaTime","getTime","clearInterval","intervalID","renderTimer","this","refs","ref","updateTimer","init","setInterval","stopTimer","deltatime","time","getTimeComponents","textContent","days","hours","mins","secs","timeDelta","pad","Math","floor","value","String","padStart","refss","formRef","inputDay","inputMonth","inputYear","submitbtn","addEventListener","e","preventDefault","dateArray","split","handleClick"],"mappings":"6RA2DMA,EAAQ,I,WAxDV,cAAsC,WAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,cAShC,SAACD,GACJ,MAAO,CACNE,QAASC,SAASC,cAAiBJ,EAA1B,wBACTK,SAAUF,SAASC,cAAiBJ,EAA1B,yBACVM,QAASH,SAASC,cAAiBJ,EAA1B,wBACTO,QAASJ,SAASC,cAAiBJ,EAA1B,4BAdyB,sBAwBxB,WACN,IAAMQ,EAAOC,KAAKC,MACZC,EAAY,EAAKV,WAAWW,UAAYJ,EAElD,GAAIG,GAAa,EAGb,OAFAE,cAAc,EAAKC,iBACnB,EAAKC,YAAY,GAGjB,EAAKA,YAAYJ,MAhCrBK,KAAKhB,SAAWA,EAChBgB,KAAKf,WAAaA,EAClBe,KAAKC,KAAOD,KAAKE,IAAIF,KAAKhB,UAC1BgB,KAAKG,cACLH,KAAKI,O,2BAaTA,KAAA,WACIJ,KAAKF,WAAaO,YAAYL,KAAKG,YAAa,M,EAEpDG,UAAA,WACIT,cAAcG,KAAKF,a,EAcvBC,YAAA,SAAYQ,GACJ,IAAMC,EAAOR,KAAKS,kBAAkBF,GAEpCP,KAAKC,KAAKf,QAAQwB,YAAcF,EAAKG,KACrCX,KAAKC,KAAKZ,SAASqB,YAAcF,EAAKI,MACtCZ,KAAKC,KAAKX,QAAQoB,YAAcF,EAAKK,KACrCb,KAAKC,KAAKV,QAAQmB,YAAcF,EAAKM,M,EAE7CL,kBAAA,SAAkBM,GAKlB,MAAO,CAACJ,KAJSX,KAAKgB,IAAIC,KAAKC,MAAMH,EAAY,QAInCH,MAHIZ,KAAKgB,IAAIC,KAAKC,MAAOH,EAAY,MAAb,OAGjBF,KAFJb,KAAKgB,IAAIC,KAAKC,MAAOH,EAAY,KAAb,MAEVD,KADVd,KAAKgB,IAAIC,KAAKC,MAAOH,EAAY,IAAe,Q,EAGjEC,IAAA,SAAIG,GACA,OAAOC,OAAOD,GAAOE,SAAS,EAAG,M,KAI3B,CAAmB,CAC7BrC,SAAU,WACVC,WAAY,IAAIQ,KAAK,gBAGlB6B,EAAQ,CACXC,QAASpC,SAASC,cAAc,YAChCoC,SAAUrC,SAASC,cAAc,gBACjCqC,WAAYtC,SAASC,cAAc,kBACnCsC,UAAWvC,SAASC,cAAc,iBAClCuC,UAAWxC,SAASC,cAAc,YAOlCkC,EAAMC,QAAQK,iBAAiB,UAAU,SAACC,GAAD,OAEzC,SAAqBA,GACjBA,EAAEC,iBAMF,IAAIC,EAAYT,EAAMG,WAAWN,MAAMa,MAAM,KACzCxC,EAAO,IAAIC,KAAQsC,EAAU,GAAtB,IAA4BA,EAAU,GAAtC,IAA4CA,EAAU,IAMjE,OAJAhD,EAAME,WAAaO,EAEnBT,EAAMuB,YACNvB,EAAMqB,OACCZ,EAhBqCyC,CAAYJ,Q","file":"main.98ecac037185442ab755.js","sourcesContent":["// import enterDate from \"./enterDate\";\r\n\r\nclass CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n        this.selector = selector;\r\n        this.targetDate = targetDate;\r\n        this.refs = this.ref(this.selector);\r\n        this.updateTimer();\r\n        this.init();\r\n       \r\n    }\r\n    \r\n    ref = (selector) => { \r\n       return {\r\n        daysRef: document.querySelector(`${selector} [data-value=\"days\"]`),\r\n        hoursRef: document.querySelector(`${selector} [data-value=\"hours\"]`),\r\n        minsRef: document.querySelector(`${selector} [data-value=\"mins\"]`),\r\n        secsRef: document.querySelector(`${selector} [data-value=\"secs\"]`),\r\n        }\r\n     }\r\n   \r\n    init() {        \r\n        this.intervalID = setInterval(this.updateTimer, 1000)\r\n    }\r\n    stopTimer() {\r\n        clearInterval(this.intervalID)\r\n    }\r\n    updateTimer = () => {\r\n            const date = Date.now()\r\n            const deltaTime = this.targetDate.getTime() - date \r\n            \r\n        if (deltaTime <= 0) {\r\n            clearInterval(this.intervalID)\r\n            this.renderTimer(0)\r\n            return\r\n        }\r\n            this.renderTimer(deltaTime)\r\n    }\r\n   \r\n    renderTimer(deltatime) {\r\n            const time = this.getTimeComponents(deltatime)\r\n        \r\n            this.refs.daysRef.textContent = time.days\r\n            this.refs.hoursRef.textContent = time.hours\r\n            this.refs.minsRef.textContent = time.mins\r\n            this.refs.secsRef.textContent = time.secs\r\n        }\r\n    getTimeComponents(timeDelta) {\r\n        const days = this.pad(Math.floor(timeDelta / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(Math.floor((timeDelta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n        const mins = this.pad(Math.floor((timeDelta % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((timeDelta % (1000 * 60)) / 1000));\r\n    return {days, hours, mins, secs}\r\n    }\r\n    pad(value) {\r\n        return String(value).padStart(2, '0')\r\n    }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('02 22 2021'),\r\n});\r\n\r\n const refss = {\r\n    formRef: document.querySelector(\".js-form\"),\r\n    inputDay: document.querySelector(\".js-form-day\"),\r\n    inputMonth: document.querySelector(\".js-form-month\"),\r\n    inputYear: document.querySelector(\".js-form-year\"),\r\n    submitbtn: document.querySelector(\".submit\")\r\n}\r\n\r\n\r\n\r\n   \r\n    \r\n    refss.formRef.addEventListener('submit', (e) => handleClick(e));\r\n    \r\n    function handleClick(e) {\r\n        e.preventDefault()\r\n        // let day = refss.inputDay.value\r\n        // let month = refss.inputMonth.value\r\n        // let year = refss.inputYear.value\r\n        // date = new Date(`${month} ${day} ${year}`)\r\n\r\n        let dateArray = refss.inputMonth.value.split(\"-\")\r\n        let date = new Date(`${dateArray[1]} ${dateArray[2]} ${dateArray[0]}`)\r\n       \r\n        timer.targetDate = date;\r\n     \r\n        timer.stopTimer()\r\n        timer.init()\r\n        return date\r\n    }\r\n"],"sourceRoot":""}